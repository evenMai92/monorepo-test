[{"E:\\tinger-master\\packages\\flower\\src\\App.tsx":"1","E:\\tinger-master\\packages\\flower\\src\\pages\\index.tsx":"2","E:\\tinger-master\\packages\\flower\\src\\routes\\index.tsx":"3","E:\\monorepo-test\\packages\\flower\\src\\index.tsx":"4","E:\\monorepo-test\\packages\\flower\\src\\App.tsx":"5","E:\\monorepo-test\\packages\\flower\\src\\routes\\index.tsx":"6","E:\\monorepo-test\\packages\\flower\\src\\pages\\index.tsx":"7"},{"size":231,"mtime":1606827454000,"results":"8","hashOfConfig":"9"},{"size":3032,"mtime":1606827454000,"results":"10","hashOfConfig":"9"},{"size":651,"mtime":1631440511677,"results":"11","hashOfConfig":"9"},{"size":198,"mtime":1606827454000,"results":"12","hashOfConfig":"13"},{"size":231,"mtime":1606827454000,"results":"14","hashOfConfig":"13"},{"size":570,"mtime":1633524110380,"results":"15","hashOfConfig":"13"},{"size":3032,"mtime":1606827454000,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"md9484",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"117ctsb",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},"E:\\tinger-master\\packages\\flower\\src\\App.tsx",[],"E:\\tinger-master\\packages\\flower\\src\\pages\\index.tsx",["33"],"E:\\tinger-master\\packages\\flower\\src\\routes\\index.tsx",[],"E:\\monorepo-test\\packages\\flower\\src\\index.tsx",[],["34","35"],"E:\\monorepo-test\\packages\\flower\\src\\App.tsx",[],"E:\\monorepo-test\\packages\\flower\\src\\routes\\index.tsx",[],"E:\\monorepo-test\\packages\\flower\\src\\pages\\index.tsx",["36"],"import React, { useLayoutEffect, createRef } from 'react'\n\nconst w = document.documentElement.clientWidth;\nconst h = document.documentElement.clientHeight;\n\nconst rad = 180 / Math.PI; // 一弧度\nconst part = 360 / 5; // 樱花有五瓣\nconst r = 150; // 半径\nconst color = \"hsl(2,70%,90%)\";\n\nclass Flower {\n  r = r;\n  color = color;\n  cx = w / 2;\n  cy = h / 2;\n  ctx: CanvasRenderingContext2D\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx\n  }\n  drawFlower() {\n    const { ctx, r, color} = this\n    ctx.fillStyle = color\n    const r1 = r * 1.3;\n    for (let a = 0; a < 5; a++) {\n\n      this.drawPetal(a, r1)\n      this.drawAnthers(a, r1);\n    }\n  }\n  drawPetal(a: number, R1: number) {\n    const { ctx, cx, cy, r: R } = this\n    ctx.strokeStyle = \"#d9d9d9\";\n    ctx.fillStyle = color;\n  \n    const x0 = cx + R * Math.cos((a * part) / rad);\n    const y0 = cy + R * Math.sin((a * part) / rad);\n  \n    const x1 = cx + R1 * Math.cos((a * part + 2 * part / 6) / rad);\n    const y1 = cy + R1 * Math.sin((a * part + 2 * part / 6) / rad);\n  \n    const x2 = cx + R * Math.cos((a * part + 3 * part / 6) / rad);\n    const y2 = cy + R * Math.sin((a * part + 3 * part / 6) / rad);\n  \n    const x3 = cx + R1 * Math.cos((a * part + 4 * part / 6) / rad);\n    const y3 = cy + R1 * Math.sin((a * part + 4 * part / 6) / rad);\n  \n    const x4 = cx + R * Math.cos((a * part + part) / rad);\n    const y4 = cy + R * Math.sin((a * part + part) / rad);\n  \n    // petal\n    ctx.beginPath();\n    ctx.moveTo(cx, cy);\n    ctx.quadraticCurveTo(x0, y0, x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x3, y3);\n    ctx.quadraticCurveTo(x4, y4, cx, cy);\n    ctx.fill();\n    ctx.stroke();\n  }\n  drawAnthers(a: number, R1: number) {\n    const { ctx, cx, cy, r: R } = this\n    ctx.save();\n    ctx.strokeStyle = \"#fff\";\n\n    const ax0 = cx + R / 3 * Math.cos((a * part + 2 * part / 6) / rad);\n    const ay0 = cy + R / 3 * Math.sin((a * part + 2 * part / 6) / rad);\n    const ax1 = cx + R / 2 * Math.cos((a * part + 3 * part / 6) / rad);\n    const ay1 = cy + R / 2 * Math.sin((a * part + 3 * part / 6) / rad);\n    const ax2 = cx + R / 3 * Math.cos((a * part + 4 * part / 6) / rad);\n    const ay2 = cy + R / 3 * Math.sin((a * part + 4 * part / 6) / rad);\n    let ary = []\n    // 如果半径大于40\n    if (R > 40) {\n      ary = [{\n        x: ax0,\n        y: ay0\n      }, {\n        x: ax1,\n        y: ay1\n      }, {\n        x: ax2,\n        y: ay2\n      }];\n    } else {\n      ary = [{\n        x: ax1,\n        y: ay1\n      }];\n    }\n\n    ctx.beginPath();\n    for (let i = 0; i < ary.length; i++) {\n      ctx.moveTo(cx, cy);\n      ctx.lineTo(ary[i].x, ary[i].y);\n      ctx.arc(ary[i].x, ary[i].y, 2, 0, 2 * Math.PI)\n    }\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\nexport default function Index () {\n  const ref = createRef<HTMLCanvasElement>()\n  useLayoutEffect(() => {\n    const ctx = ref.current?.getContext('2d');\n    const flower = new Flower(ctx!);\n    flower.drawFlower();\n  }, [])\n  return <canvas ref={ref} width={w} height={h}></canvas>\n}",{"ruleId":"37","severity":1,"message":"38","line":108,"column":6,"nodeType":"39","endLine":108,"endColumn":8,"suggestions":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"37","severity":1,"message":"38","line":108,"column":6,"nodeType":"39","endLine":108,"endColumn":8,"suggestions":"45"},"react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-native-reassign",["47"],"no-negated-in-lhs",["48"],["49"],{"desc":"50","fix":"51"},"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"52"},"Update the dependencies array to be: [ref]",{"range":"53","text":"54"},{"range":"55","text":"54"},[2937,2939],"[ref]",[2937,2939]]